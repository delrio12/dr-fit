{"ast":null,"code":"var _jsxFileName = \"D:\\\\ADR\\\\All Projects\\\\GitHub\\\\dr-fit\\\\src\\\\components\\\\Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from '@mui/material';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = ({\n  exercises,\n  setExercises,\n  bodyPart\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [exercisesPerPage] = useState(9);\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = Array.isArray(exercises) ? exercises.slice(indexOfFirstExercise, indexOfLastExercise) : [];\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises?limit=1500', exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}?limit=1500`, exerciseOptions);\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: '109px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      sx: {\n        fontSize: {\n          lg: '44px',\n          xs: '30px'\n        }\n      },\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '108px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        mt: {\n          lg: '114px',\n          xs: '70px'\n        }\n      },\n      alignItems: \"center\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"/dZ3YJPqVsyM0Oz3wUnnbCnHBKA=\");\n_c = Exercises;\nexport default Exercises;\n\n// This goes under Typography and its 1:22:00\n/*  */\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","jsxDEV","_jsxDEV","Exercises","exercises","setExercises","bodyPart","_s","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","Array","isArray","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exercisesData","id","sx","mt","lg","p","children","variant","fontWeight","fontSize","xs","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","flexWrap","justifyContent","map","exercise","index","alignItems","length","color","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["D:/ADR/All Projects/GitHub/dr-fit/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Pagination } from '@mui/material';\r\nimport { Box, Stack, Typography } from '@mui/material';\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\r\nimport  ExerciseCard from './ExerciseCard';\r\n\r\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n  const [exercisesPerPage] = useState(9);\r\n\r\n\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = Array.isArray(exercises) ? exercises.slice(indexOfFirstExercise, indexOfLastExercise) : [];\r\n\r\n  const paginate = (e, value) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({ top: 1800, behavior: 'smooth'});\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      let exercisesData = [];\r\n      if(bodyPart === 'all') {\r\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises?limit=1500', exerciseOptions);\r\n      } else {\r\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}?limit=1500`, exerciseOptions);\r\n      }\r\n      setExercises(exercisesData);\r\n    }\r\n\r\n    fetchExercisesData();\r\n  }, [bodyPart]);\r\n\r\n  return (\r\n    <Box id='exercises'\r\n      sx={{mt: { lg: '109px'}}}\r\n      mt='50px'\r\n      p='20px'\r\n    >\r\n      <Typography variant='h4' fontWeight=\"bold\" sx={{ fontSize: { lg: '44px', xs: '30px' } }} mb='46px'>\r\n        Showing Results\r\n      </Typography> \r\n      <Stack direction='row' sx={{ gap: { lg:'108px', xs: '50px'}}}\r\n       flexWrap='wrap' justifyContent='center'>\r\n         {currentExercises.map((exercise, index) => (\r\n          <ExerciseCard key={index} exercise={exercise} />\r\n        ))}\r\n      </Stack>\r\n      <Stack sx={{ mt: { lg: '114px', xs: '70px' } }} alignItems='center'>\r\n            {exercises.length > 9 && (\r\n                <Pagination\r\n                    color = 'standard'\r\n                    shape = 'rounded'\r\n                    defaultPage = {1}\r\n                    count = { Math.ceil(exercises.length / exercisesPerPage) }\r\n                    page = { currentPage }\r\n                    onChange = { paginate }\r\n                    size = 'large' />  \r\n            )}\r\n        </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Exercises;\r\n\r\n\r\n// This goes under Typography and its 1:22:00\r\n/*  */ "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}