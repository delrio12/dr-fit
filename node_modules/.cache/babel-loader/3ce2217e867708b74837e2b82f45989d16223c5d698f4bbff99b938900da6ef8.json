{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Pagination}from'@mui/material';import{Box,Stack,Typography}from'@mui/material';import{exerciseOptions,fetchData}from'../utils/fetchData';import ExerciseCard from'./ExerciseCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Exercises=_ref=>{let{exercises,setExercises,bodyPart}=_ref;const[currentPage,setCurrentPage]=useState(1);const[exercisesPerPage]=useState(9);const indexOfLastExercise=currentPage*exercisesPerPage;const indexOfFirstExercise=indexOfLastExercise-exercisesPerPage;const currentExercises=Array.isArray(exercises)?exercises.slice(indexOfFirstExercise,indexOfLastExercise):[];const handlePageChange=(e,value)=>{setCurrentPage(value);window.scrollTo({top:1800,behavior:'smooth'});};useEffect(()=>{const fetchExercisesData=async()=>{let exercisesData=[];if(bodyPart==='all'){exercisesData=await fetchData('https://exercisedb.p.rapidapi.com/exercises?limit=1500',exerciseOptions);}else{exercisesData=await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}?limit=1500`,exerciseOptions);}setExercises(exercisesData);setCurrentPage(1);};fetchExercisesData();},[bodyPart]);return/*#__PURE__*/_jsxs(Box,{id:\"exercises\",sx:{mt:{lg:'109px'}},mt:\"50px\",p:\"20px\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"bold\",sx:{fontSize:{lg:'44px',xs:'30px'}},mb:\"46px\",children:\"Showing Results\"}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",sx:{gap:{lg:'108px',xs:'50px'}},flexWrap:\"wrap\",justifyContent:\"center\",children:currentExercises.map((exercise,index)=>/*#__PURE__*/_jsx(ExerciseCard,{exercise:exercise},index))}),/*#__PURE__*/_jsx(Stack,{sx:{mt:{lg:'114px',xs:'70px'}},alignItems:\"center\",children:exercises.length>9&&/*#__PURE__*/_jsx(Pagination,{color:\"standard\",shape:\"circular\",defaultPage:1,count:Math.ceil(exercises.length/exercisesPerPage),page:currentPage,onChange:handlePageChange,size:\"large\"})})]});};export default Exercises;","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","jsx","_jsx","jsxs","_jsxs","Exercises","_ref","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","Array","isArray","slice","handlePageChange","e","value","window","scrollTo","top","behavior","fetchExercisesData","exercisesData","id","sx","mt","lg","p","children","variant","fontWeight","fontSize","xs","mb","direction","gap","flexWrap","justifyContent","map","exercise","index","alignItems","length","color","shape","defaultPage","count","Math","ceil","page","onChange","size"],"sources":["D:/ADR/All Projects/GitHub/dr-fit/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Pagination } from '@mui/material';\r\nimport { Box, Stack, Typography } from '@mui/material';\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\r\nimport  ExerciseCard from './ExerciseCard';\r\n\r\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n  const [exercisesPerPage] = useState(9);\r\n\r\n\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = Array.isArray(exercises) ? exercises.slice(indexOfFirstExercise, indexOfLastExercise) : [];\r\n\r\n  const handlePageChange = (e, value) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({ top: 1800, behavior: 'smooth'});\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      let exercisesData = [];\r\n      if(bodyPart === 'all') {\r\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises?limit=1500', exerciseOptions);\r\n      } else {\r\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}?limit=1500`, exerciseOptions);\r\n      }\r\n      setExercises(exercisesData);\r\n      setCurrentPage(1);\r\n    }\r\n\r\n    fetchExercisesData();\r\n  }, [bodyPart]);\r\n\r\n  return (\r\n    <Box id='exercises'\r\n      sx={{mt: { lg: '109px'}}}\r\n      mt='50px'\r\n      p='20px'\r\n    >\r\n      <Typography variant='h4' fontWeight=\"bold\" sx={{ fontSize: { lg: '44px', xs: '30px' } }} mb='46px'>\r\n        Showing Results\r\n      </Typography> \r\n      <Stack direction='row' sx={{ gap: { lg:'108px', xs: '50px'}}}\r\n       flexWrap='wrap' justifyContent='center'>\r\n         {currentExercises.map((exercise, index) => (\r\n          <ExerciseCard key={index} exercise={exercise} />\r\n        ))}\r\n      </Stack>\r\n      <Stack sx={{ mt: { lg: '114px', xs: '70px' } }} alignItems='center'>\r\n            {exercises.length > 9 && (\r\n                <Pagination\r\n                    color = 'standard'\r\n                    shape = 'circular'\r\n                    defaultPage = { 1 }\r\n                    count = { Math.ceil(exercises.length / exercisesPerPage) }\r\n                    page = { currentPage }\r\n                    onChange = { handlePageChange }\r\n                    size = 'large' />  \r\n            )}\r\n        </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Exercises;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}